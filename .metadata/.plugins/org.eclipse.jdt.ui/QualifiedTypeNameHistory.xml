<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="javax.validation.constraints.NotBlank"/>
    <fullyQualifiedTypeName name="javax.validation.constraints.Email"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="com.example.demo.model.UserModel"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="java.util.UUID"/>
    <fullyQualifiedTypeName name="javax.persistence.Entity"/>
    <fullyQualifiedTypeName name="javax.persistence.Table"/>
    <fullyQualifiedTypeName name="javax.persistence.Id"/>
    <fullyQualifiedTypeName name="javax.persistence.GeneratedValue"/>
    <fullyQualifiedTypeName name="javax.persistence.Column"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
    <fullyQualifiedTypeName name="org.modelmapper.spi.MatchingStrategy"/>
    <fullyQualifiedTypeName name="com.example.demo.service.impl.UserServiceImpl"/>
    <fullyQualifiedTypeName name="org.springframework.ui.ModelMap"/>
    <fullyQualifiedTypeName name="org.modelmapper.convention.MatchingStrategies"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="com.example.demo.model.response.UserResponse"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter"/>
    <fullyQualifiedTypeName name="com.example.demo.model.LoginModel"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.UsernamePasswordAuthenticationToken"/>
    <fullyQualifiedTypeName name="org.aspectj.weaver.ast.And"/>
    <fullyQualifiedTypeName name="com.example.demo.service.UserService"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetailsService"/>
    <fullyQualifiedTypeName name="com.example.demo.model.entity.UserEntity"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UsernameNotFoundException"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.User"/>
    <fullyQualifiedTypeName name="com.example.demo.model.dto.UserDto"/>
    <fullyQualifiedTypeName name="com.example.demo.security.AuthenticationFilter"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.AuthenticationManager"/>
    <fullyQualifiedTypeName name="org.modelmapper.ModelMapper"/>
    <fullyQualifiedTypeName name="java.util.Date"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.SignatureAlgorithm"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.gateway.filter.factory.AbstractGatewayFilterFactory"/>
    <fullyQualifiedTypeName name="com.example.demo.security.AuthorizationHeaderFilter.Config"/>
    <fullyQualifiedTypeName name="org.springframework.web.server.ServerWebExchange"/>
    <fullyQualifiedTypeName name="org.springframework.http.server.reactive.ServerHttpResponse"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.Jwts"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.context.environment.EnvironmentManager"/>
    <fullyQualifiedTypeName name="org.springframework.core.env.Environment"/>
    <fullyQualifiedTypeName name="org.springframework.http.server.ServerHttpRequest"/>
    <fullyQualifiedTypeName name="org.springframework.http.server.reactive.ServerHttpRequest"/>
    <fullyQualifiedTypeName name="org.springframework.http.server.reactive.HttpHandler"/>
    <fullyQualifiedTypeName name="io.netty.handler.codec.http2.Http2Headers"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="com.example.demo.security.AuthorizationHeaderFilter"/>
    <fullyQualifiedTypeName name="com.example.demo.filters.MyPreFilter"/>
    <fullyQualifiedTypeName name="com.google.common.net.HttpHeaders"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpHeaders"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.gateway.filter.GlobalFilter"/>
    <fullyQualifiedTypeName name="org.slf4j.Logger"/>
    <fullyQualifiedTypeName name="org.slf4j.LoggerFactory"/>
    <fullyQualifiedTypeName name="reactor.core.publisher.Mono"/>
    <fullyQualifiedTypeName name="org.springframework.core.annotation.Order"/>
    <fullyQualifiedTypeName name="org.springframework.core.Ordered"/>
</qualifiedTypeNameHistroy>
